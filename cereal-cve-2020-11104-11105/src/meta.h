#pragma once

#include "types.h"
#include "typeinfo.h"

#define FOR_ALL_TYPES_2(FN) \
    FN(bool, kDataType::Bool) \
    FN(char, kDataType::Char) \
    FN(signed char, kDataType::SignedChar) \
    FN(unsigned char, kDataType::UnsignedChar) \
    FN(signed short, kDataType::SignedShort) \
    FN(unsigned short, kDataType::UnsignedShort) \
    FN(signed int, kDataType::SignedInt) \
    FN(unsigned int, kDataType::UnsignedInt) \
    FN(signed long, kDataType::SignedLong) \
    FN(unsigned long, kDataType::UnsignedLong) \
    FN(float, kDataType::Float) \
    FN(double, kDataType::Double) \
    FN(long double, kDataType::LongDouble) \
    FN(signed long long, kDataType::SignedLongLong) \
    FN(unsigned long long, kDataType::UnsignedLongLong) \
    FN(Chrono, kDataType::StdChronoDuration)

#define FOR_ALL_TYPES_3(FN) \
    FOR_ALL_TYPES_2(FN) \
    FN(std::string, kDataType::StdString)

#define FOR_ALL_TYPES(FN) \
    FOR_ALL_TYPES_3(FN) \
    FN(std::complex<float>, kDataType::StdComplexFloat) \
    FN(std::complex<double>, kDataType::StdComplexDouble) \
    FN(std::complex<long double>, kDataType::StdComplexLongDouble) \
    FN(std::bitset<256>, kDataType::StdBitset256)

#define FOR_ALL_ARCHIVES(FN, TYPE) \
    FN(cereal::BinaryInputArchive, true, TYPE) \
    FN(cereal::BinaryOutputArchive, false, TYPE) \
    FN(cereal::PortableBinaryInputArchive, true, TYPE) \
    FN(cereal::PortableBinaryOutputArchive, false, TYPE) \
    FN(cereal::JSONInputArchive, true, TYPE) \
    FN(cereal::JSONOutputArchive, false, TYPE) \
    FN(cereal::XMLInputArchive, true, TYPE) \
    FN(cereal::XMLOutputArchive, false, TYPE)

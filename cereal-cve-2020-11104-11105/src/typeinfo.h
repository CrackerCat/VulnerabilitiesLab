#pragma once

#include <cstdint>

namespace cereal {
namespace fuzzer {

enum class kDataType: uint8_t {
    Bool = 0,

    Char,
    SignedChar,
    UnsignedChar,

    Short,
    SignedShort,
    UnsignedShort,

    Int,
    SignedInt,
    UnsignedInt,

    Long,
    SignedLong,
    UnsignedLong,

    Float,
    Double,
    LongDouble,

    StdString,

    StdComplexFloat,
    StdComplexDouble,
    StdComplexLongDouble,

    StdBitset256,

    SignedLongLong,
    UnsignedLongLong,

    StdChronoDuration,

    CustomType,

    Last,
};

enum class kDataSuperType : uint8_t {
    None = 0,
    Vector,
    Array,
    Deque,
    Set,
    Atomic,
    Optional,
    List,
    Stack,
    Queue,
    Map,
    Tuple2,
    Tuple3,
    StdUniquePtr,
    StdSharedPtr,
    Last,
};

typedef struct {
    kDataType type;
    kDataSuperType super;
} TypeInfo;

} /* namespace fuzzer */
} /* namespace cereal */

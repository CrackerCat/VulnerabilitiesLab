#pragma once

#include <cstdint>
#include <vector>

#include <cereal/types/string.hpp>
#include <cereal/types/complex.hpp>
#include <cereal/types/bitset.hpp>
#include <cereal/types/chrono.hpp>

namespace cereal {
namespace fuzzer {

class CustomType {
    public:
        std::vector<uint8_t> data;

        CustomType(void);
        ~CustomType();

        template<class Archive>
        void save(Archive& ar) const;

        template<class Archive>
        void load(Archive& ar);
};

using Chrono = std::chrono::duration<int,std::centi>;

} /* namespace fuzzer */
} /* namespace cereal */

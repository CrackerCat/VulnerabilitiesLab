#include "types.h"
#include "archives.h"

namespace cereal {
namespace fuzzer {

CustomType::CustomType(void) { }
CustomType::~CustomType() { }

template<class Archive>
void CustomType::save(Archive& ar) const {
    ar.saveBinaryValue(data.data(), data.size());
}

template<class Archive>
void CustomType::load(Archive& ar) {
    ar.loadBinaryValue(data.data(), data.size());
}

/* Explicit instantations */
template void CustomType::save<>(cereal::JSONOutputArchive& ar) const;
template void CustomType::load<>(cereal::JSONInputArchive& ar);
template void CustomType::save<>(cereal::XMLOutputArchive& ar) const;
template void CustomType::load<>(cereal::XMLInputArchive& ar);

} /* namespace fuzzer */
} /* namespace cereal */
